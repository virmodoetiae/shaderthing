( ) - Status: W - work-in-progress; X - done;

TODO ---------------------------------------------------------------------------

(X) Add project README with compilation instructions

(X) Implement export control for enabling GIF palette calculation only 
    on first frame

(X) Add settings for keyboard and mouse sensitivity for iCameraPosition,
    iCameraDirection controls

(X) Add info tooltip on iMouse row in Uniform tab

(X) Add font settings for loading Japanese & simplified 
    Chinese character sets (unloading missing but not very important...)

(X) Add save guards to prevent closing app and/or creating a new project
    by misting, to prevent loosing existing work

(X) Remove tab support from TextEditor (use only spaces for cleanliness),
    add indent/de-indent support when pressing tab/shift+tab on a text
    selection

(W) Expand code repository section

( ) [IMPORTANT] Either move to a GL_RGBA32F format for framebuffer color 
    attachment internal format or enable support for it, with framebuffer-
    rendered layers having an additional option to change the internal
    format, if needed

( ) Check if possible to add support for GL_RGBA32F-formatted framebuffers
    to the OpenGLKMeansQuantizer

( ) Prevent Ctrl+S causing project save when iCameraPosition changing due to 
    keyboard inputs

( ) Fix layer resolution change resulting in reset of internal framebuffer 
    filtering and magnification/minimization settings to default values

( ) Fix text replace tool not triggering appearence of fragment shader 
    compilation button if some text was actually replaced

( ) Add support for 3D-textures management in vir, the ShaderThing resource
    manager and uniform system

( ) Add some sort of 2D (and eventually 3D) noise generator and output to
    either static and/or dynamic textures

( ) Fix (or find workaround) for ImGui window icons disappearing on 
    ImGui docking/undocking actions

( ) Test compilation and running on Linux systems

( ) Test performance of ShaderThing compiled with max level optimizations (-O3)
    (note that the thirdparty library is always compiled with max optimizations,
    regardless, this only pertains vir/ and shaderthing/).
    I have a suspiction that optimizations are resulting in memory leaks on
    project loading, resource loading/unloading (it can happend indeed!)
    For the time being, the releases are compiled without optimizations 
    (-O0)

( ) Expand project README with demo images and GIFs

( ) Add example projects that can be loaded in ShaderThings as demos/tutorials

TO-CONSIDER --------------------------------------------------------------------

*   Enable option to use the quantizer palette for GIF quantization on GIF 
    exporting

*   Record video tutorial(s) of application usage, host them on YouTube, 
    possibly find a way to add tutorial links within the application.

*   Re-work the save system to leverage a more structure storage format, e.g.,
    JSON-like files